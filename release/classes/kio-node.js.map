{"version":3,"file":"kio-node.js","sourceRoot":"","sources":["../../src/classes/kio-node.ts"],"names":[],"mappings":"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","sourcesContent":["import { KioNode, KioNodeHeaders, KioFragment, KioQuery } from '../interfaces'\n\nconst RX_SLUG_MOD : RegExp = new RegExp (/^slug\\-/)\n\nexport class KioNodeModel implements KioNode {\n\n  get isKioNode () { return true }\n  set isKioNode ( b ) { }\n\n  constructor ( props : any , parent? : KioFragment) {\n    this._type = props.type || 'pub'\n    this._cuid = props.cuid\n    this._locale = props.locale\n    this._modifiers = props.modifiers || props.mod || []\n    this._headers = props.headers || {}\n    this._parent = parent\n  } \n\n  private _type : string;\n  private _cuid : string\n  private _locale : string\n  private _modifiers : string[]\n  private _parent : KioFragment\n  private _headers : KioNodeHeaders;\n\n\n  get type () {\n    return this._type\n  }\n\n  get cuid () {\n    return this._cuid\n  }\n\n  get locale () {\n    return this._locale || 'en_US'\n  }\n\n  get modifiers () {\n    return this._modifiers.slice()\n  }\n\n  hasModifier ( modifier:string ) {\n    return this._modifiers.indexOf ( modifier ) > -1\n  }\n\n  get parent () {\n    return this._parent\n  }\n\n  set parent ( parentNode : KioFragment ) {\n    this._parent = parentNode || null\n  }\n\n  get headers () : KioNodeHeaders {\n    return this._headers\n  }\n\n  header ( headerKey:string ) {\n    return (this._headers||{}) [ headerKey ] || null\n  }\n\n  get level () : number {\n    return this.parent ? this.parent.level + 1 : 0\n  }\n\n  get index () : number {\n    if ( !this.parent )\n    {\n      return -1\n    }\n    const parentFragment = <KioFragment>this.parent\n    return (<any>parentFragment).childIndex ( this )\n  }\n\n  // KioNavigationItem\n  get slug() : string {\n    const slugMod = this.modifiers.find( mod => RX_SLUG_MOD.test ( mod ) )\n    return slugMod && slugMod.replace ( RX_SLUG_MOD , '' )\n  }\n\n  get contentQuery () : KioQuery {\n    return {\n      cuid: this.cuid ,\n      locale: this.locale ,\n      role: this._type ,\n      cmd: 'get'\n    }\n  }\n\n  toObject():KioNode{\n    return {\n      type: this._type,\n      cuid: this._cuid,\n      headers: this.headers ,\n      locale: this._locale,\n      modifiers: this.modifiers\n    }\n  }\n}\n"]}